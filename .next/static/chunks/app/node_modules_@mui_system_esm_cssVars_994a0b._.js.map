{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mui/system/esm/cssVars/cssVarsParser.js"],"sourcesContent":["/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value, arrayKeys = []) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = [], arrayKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\n          } else {\n            callback([...parentKeys, key], value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n    const lastKey = keys[keys.length - 1];\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n */\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  const varsWithDefaults = {};\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\n        assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${value})`, arrayKeys);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars,\n    varsWithDefaults\n  };\n}"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;CAgBC;;;;;AACM,MAAM,mBAAmB,SAAC,KAAK,MAAM;QAAO,6EAAY,EAAE;IAC/D,IAAI,OAAO;IACX,KAAK,OAAO,CAAC,CAAC,GAAG;QACf,IAAI,UAAU,KAAK,MAAM,GAAG,GAAG;YAC7B,IAAI,MAAM,OAAO,CAAC,OAAO;gBACvB,IAAI,CAAC,OAAO,GAAG,GAAG;YACpB,OAAO,IAAI,QAAQ,OAAO,SAAS,UAAU;gBAC3C,IAAI,CAAC,EAAE,GAAG;YACZ;QACF,OAAO,IAAI,QAAQ,OAAO,SAAS,UAAU;YAC3C,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;gBACZ,IAAI,CAAC,EAAE,GAAG,UAAU,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC;YAC1C;YACA,OAAO,IAAI,CAAC,EAAE;QAChB;IACF;AACF;AAaO,MAAM,iBAAiB,CAAC,KAAK,UAAU;IAC5C,SAAS,QAAQ,MAAM;YAAE,aAAA,iEAAa,EAAE,EAAE,YAAA,iEAAY,EAAE;QACtD,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC;gBAAC,CAAC,KAAK,MAAM;YAC1C,IAAI,CAAC,mBAAmB,mBAAmB,CAAC,gBAAgB;mBAAI;gBAAY;aAAI,GAAG;gBACjF,IAAI,UAAU,aAAa,UAAU,MAAM;oBACzC,IAAI,OAAO,UAAU,YAAY,OAAO,IAAI,CAAC,OAAO,MAAM,GAAG,GAAG;wBAC9D,QAAQ,OAAO;+BAAI;4BAAY;yBAAI,EAAE,MAAM,OAAO,CAAC,SAAS;+BAAI;4BAAW;yBAAI,GAAG;oBACpF,OAAO;wBACL,SAAS;+BAAI;4BAAY;yBAAI,EAAE,OAAO;oBACxC;gBACF;YACF;QACF;IACF;IACA,QAAQ;AACV;AACA,MAAM,cAAc,CAAC,MAAM;IACzB,IAAI,OAAO,UAAU,UAAU;QAC7B,IAAI;YAAC;YAAc;YAAc;YAAW;SAAS,CAAC,IAAI,CAAC,CAAA,OAAQ,KAAK,QAAQ,CAAC,QAAQ;YACvF,iCAAiC;YACjC,OAAO;QACT;QACA,MAAM,UAAU,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;QACrC,IAAI,QAAQ,WAAW,GAAG,OAAO,CAAC,cAAc,GAAG;YACjD,8BAA8B;YAC9B,OAAO;QACT;QACA,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC;IACrB;IACA,OAAO;AACT;AAwBe,SAAS,cAAc,KAAK,EAAE,OAAO;IAClD,MAAM,EACJ,MAAM,EACN,uBAAuB,EACxB,GAAG,WAAW,CAAC;IAChB,MAAM,MAAM,CAAC;IACb,MAAM,OAAO,CAAC;IACd,MAAM,mBAAmB,CAAC;IAC1B,eAAe,OAAO,CAAC,MAAM,OAAO;QAClC,IAAI,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;YAC1D,IAAI,CAAC,2BAA2B,CAAC,wBAAwB,MAAM,QAAQ;gBACrE,kEAAkE;gBAClE,MAAM,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC;gBACjE,OAAO,MAAM,CAAC,KAAK;oBACjB,CAAC,OAAO,EAAE,YAAY,MAAM;gBAC9B;gBACA,iBAAiB,MAAM,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE;gBAC/C,iBAAiB,kBAAkB,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;YACvE;QACF;IACF,GAAG,CAAA,OAAQ,IAAI,CAAC,EAAE,KAAK,OAAO,sBAAsB;;IAEpD,OAAO;QACL;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mui/system/esm/cssVars/prepareCssVars.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: light\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(light, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    var _parserConfig$getSele2;\n    if (!colorScheme) {\n      var _parserConfig$getSele;\n      const css = _extends({}, rootCss);\n      return {\n        css,\n        vars: rootVars,\n        selector: (parserConfig == null || (_parserConfig$getSele = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele.call(parserConfig, colorScheme, css)) || ':root'\n      };\n    }\n    const css = _extends({}, colorSchemesMap[colorScheme].css);\n    return {\n      css,\n      vars: colorSchemesMap[colorScheme].vars,\n      selector: (parserConfig == null || (_parserConfig$getSele2 = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele2.call(parserConfig, colorScheme, css)) || ':root'\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nexport default prepareCssVars;"],"names":[],"mappings":";;;;;;;;;;;;AAGA,MAAM,YAAY;IAAC;IAAgB;IAAc;CAAqB;;;AAGtE,SAAS,eAAe,KAAK,EAAE,YAAY;IACzC,8CAA8C;IAC9C,MAAM,EACF,eAAe,CAAC,CAAC,EACjB,qBAAqB,OAAO,EAC7B,GAAG,OACJ,aAAa,4KAA8B,OAAO;IACpD,MAAM,EACJ,MAAM,QAAQ,EACd,KAAK,OAAO,EACZ,kBAAkB,oBAAoB,EACvC,GAAG,0JAAc,YAAY;IAC9B,IAAI,YAAY;IAChB,MAAM,kBAAkB,CAAC;IACzB,MAAM,EACF,CAAC,mBAAmB,EAAE,KAAK,EAC5B,GAAG,cACJ,oBAAoB,4KAA8B,cAAc;QAAC;KAAmB,CAAC,GAAG;IAC1F,OAAO,OAAO,CAAC,qBAAqB,CAAC,GAAG,OAAO,CAAC;YAAC,CAAC,KAAK,OAAO;QAC5D,MAAM,EACJ,IAAI,EACJ,GAAG,EACH,gBAAgB,EACjB,GAAG,0JAAc,QAAQ;QAC1B,YAAY,mJAAU,WAAW;QACjC,eAAe,CAAC,IAAI,GAAG;YACrB;YACA;QACF;IACF;IACA,IAAI,OAAO;QACT,oEAAoE;QACpE,MAAM,EACJ,GAAG,EACH,IAAI,EACJ,gBAAgB,EACjB,GAAG,0JAAc,OAAO;QACzB,YAAY,mJAAU,WAAW;QACjC,eAAe,CAAC,mBAAmB,GAAG;YACpC;YACA;QACF;IACF;IACA,MAAM,kBAAkB,CAAA;QACtB,IAAI;QACJ,IAAI,CAAC,aAAa;YAChB,IAAI;YACJ,MAAM,MAAM,uJAAS,CAAC,GAAG;YACzB,OAAO;gBACL;gBACA,MAAM;gBACN,UAAU,CAAC,gBAAgB,QAAQ,CAAC,wBAAwB,aAAa,WAAW,KAAK,OAAO,KAAK,IAAI,sBAAsB,IAAI,CAAC,cAAc,aAAa,IAAI,KAAK;YAC1K;QACF;QACA,MAAM,MAAM,uJAAS,CAAC,GAAG,eAAe,CAAC,YAAY,CAAC,GAAG;QACzD,OAAO;YACL;YACA,MAAM,eAAe,CAAC,YAAY,CAAC,IAAI;YACvC,UAAU,CAAC,gBAAgB,QAAQ,CAAC,yBAAyB,aAAa,WAAW,KAAK,OAAO,KAAK,IAAI,uBAAuB,IAAI,CAAC,cAAc,aAAa,IAAI,KAAK;QAC5K;IACF;IACA,OAAO;QACL,MAAM;QACN;IACF;AACF;uCACe"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mui/system/esm/cssVars/createCssVarsTheme.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"cssVarPrefix\", \"shouldSkipGeneratingVar\"];\nimport prepareCssVars from './prepareCssVars';\nfunction createCssVarsTheme(theme) {\n  const {\n      cssVarPrefix,\n      shouldSkipGeneratingVar\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  return _extends({}, theme, prepareCssVars(otherTheme, {\n    prefix: cssVarPrefix,\n    shouldSkipGeneratingVar\n  }));\n}\nexport default createCssVarsTheme;"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,YAAY;IAAC;IAAgB;CAA0B;;AAE7D,SAAS,mBAAmB,KAAK;IAC/B,MAAM,EACF,YAAY,EACZ,uBAAuB,EACxB,GAAG,OACJ,aAAa,4KAA8B,OAAO;IACpD,OAAO,uJAAS,CAAC,GAAG,OAAO,2JAAe,YAAY;QACpD,QAAQ;QACR;IACF;AACF;uCACe"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mui/system/esm/cssVars/createGetCssVar.js"],"sourcesContent":["/**\n * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable\n * and they does not need to remember the prefix (defined once).\n */\nexport default function createGetCssVar(prefix = '') {\n  function appendVar(...vars) {\n    if (!vars.length) {\n      return '';\n    }\n    const value = vars[0];\n    if (typeof value === 'string' && !value.match(/(#|\\(|\\)|(-?(\\d*\\.)?\\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\\d*\\.)?\\d+)$|(\\d+ \\d+ \\d+)/)) {\n      return `, var(--${prefix ? `${prefix}-` : ''}${value}${appendVar(...vars.slice(1))})`;\n    }\n    return `, ${value}`;\n  }\n\n  // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.\n  const getCssVar = (field, ...fallbacks) => {\n    return `var(--${prefix ? `${prefix}-` : ''}${field}${appendVar(...fallbacks)})`;\n  };\n  return getCssVar;\n}"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS;QAAgB,SAAA,iEAAS;IAC/C,SAAS;QAAU,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,OAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA,OAAA;YAAG,KAAH,QAAA,SAAA,CAAA,KAAO;QAAD;QACvB,IAAI,CAAC,KAAK,MAAM,EAAE;YAChB,OAAO;QACT;QACA,MAAM,QAAQ,IAAI,CAAC,EAAE;QACrB,IAAI,OAAO,UAAU,YAAY,CAAC,MAAM,KAAK,CAAC,gHAAgH;YAC5J,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,MAAM,EAAE,aAAa,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;QACvF;QACA,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC;IACrB;IAEA,+HAA+H;IAC/H,MAAM,YAAY,SAAC;yCAAU;YAAA;;QAC3B,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,MAAM,EAAE,aAAa,WAAW,CAAC,CAAC;IACjF;IACA,OAAO;AACT"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from '../InitColorSchemeScript/InitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode != null ? mode : defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return _extends({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event != null && event.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return _extends({}, currentState, {\n          systemMode\n        });\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nconst _excluded = [\"colorSchemes\", \"components\", \"generateCssVars\", \"cssVarPrefix\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport deepmerge from '@mui/utils/deepmerge';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport ThemeProvider from '../ThemeProvider';\nimport InitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from '../InitColorSchemeScript/InitColorSchemeScript';\nimport useCurrentColorScheme from './useCurrentColorScheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : _formatMuiErrorMessage(19));\n    }\n    return value;\n  };\n  function CssVarsProvider(props) {\n    const {\n      children,\n      theme: themeProp = defaultTheme,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      attribute = defaultAttribute,\n      defaultMode = designSystemMode,\n      defaultColorScheme = designSystemColorScheme,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      colorSchemeSelector = ':root',\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const scopedTheme = themeProp[themeId];\n    const _ref = scopedTheme || themeProp,\n      {\n        colorSchemes = {},\n        components = {},\n        generateCssVars = () => ({\n          vars: {},\n          css: {}\n        }),\n        cssVarPrefix\n      } = _ref,\n      restThemeProp = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const calculatedMode = (() => {\n      if (mode) {\n        return mode;\n      }\n      // This scope occurs on the server\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n      return defaultMode;\n    })();\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    })();\n\n    // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = generateCssVars();\n\n    // 3. Start composing the theme object\n    const theme = _extends({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    });\n\n    // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars\n      } = generateCssVars(key);\n      theme.vars = deepmerge(theme.vars, vars);\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = _extends({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n        return defaultColorScheme.light;\n      })();\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    theme.vars = deepmerge(theme.vars, rootVars);\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode,\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(GlobalStyles, {\n          styles: {\n            [colorSchemeSelector]: rootCss\n          }\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: defaultColorSchemeStyleSheet\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: otherColorSchemesStyleSheet\n        })]\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: PropTypes.string,\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: PropTypes.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  const getInitColorSchemeScript = params => InitColorSchemeScript(_extends({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 840, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}