{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/switcher/LanguageContext.jsx"],"sourcesContent":["\"use client\"\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => useContext(LanguageContext);\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('all'); \n  useEffect(() => {\n    // Эта проверка гарантирует, что код внутри useEffect будет выполняться только в браузере\n    if (typeof window !== 'undefined') {\n      const storedLanguage = localStorage.getItem('country_brands');\n      if (storedLanguage) {\n        setLanguage(storedLanguage);\n      }\n    }\n  }, []);\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAGA,MAAM,gCAAkB;AAEjB,MAAM,cAAc;;IAAM,OAAA,qJAAW;AAAe;GAA9C;AAEN,MAAM,mBAAmB;QAAC,EAAE,QAAQ,EAAE;;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,mJAAS;IACzC,oJAAU;QACR,yFAAyF;QACzF,IAAI,OAAO,WAAW,aAAa;YACjC,MAAM,iBAAiB,aAAa,OAAO,CAAC;YAC5C,IAAI,gBAAgB;gBAClB,YAAY;YACd;QACF;IACF,GAAG,EAAE;IAEL,qBACE,iKAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAU;QAAY;kBACtD;;;;;;AAGP;IAjBa;KAAA"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/switcher/LanguageSwitcher.jsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport useSWR, { mutate } from \"swr\";\nimport { useTranslation } from \"react-i18next\";\nimport Loader from \"@/components/Loader\";\n\nconst LanguageSwitcher = () => {\n  const { t, i18n } = useTranslation();\n  const { data: selectedLanguage, error } = useSWR(\n    \"selectedLanguage\",\n    () => i18n.language\n  );\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Define language options for different partners and the default list\n  const availableLanguages = [\n    { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n    { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n    { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n    { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n    { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n    { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n    { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n    { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n    { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n    { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n    { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n    { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n    { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n    { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n    { code: \"cz\", label: \"Czech\", flag: \"🇨🇿\" },\n    { code: \"sk\", label: \"Slovakia\", flag: \"🇸🇰\" },\n    { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n    { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n    { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n    { code: \"hu\", label: \"Hungary\", flag: \"🇭🇺\" },\n    { code: \"bg\", label: \"Bulgaria\", flag: \"🇧🇬\" },\n    { code: \"all\", label: \"World\", flag: \"🌍\" },\n  ];\n\n  // Define partner-specific language options\n  const availableLanguages1039 = availableLanguages;\n  const availableLanguages1043 = [\n    { code: \"all\", label: \"English\", flag: \"🌍\" },\n  ];\n  const availableLanguages1044 = [\n    { code: \"cz\", label: \"Czech Republic\", flag: \"🇨🇿\" },\n    { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n    { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n    { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n    { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n    { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n    { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n    { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n    { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n    { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n    { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n    { code: \"all\", label: \"English\", flag: \"🌍\" },\n  ];\n  const availableLanguagesCLD_VIP = [\n\n\n    { code: \"cz\", label: \"The Czech Republic\", flag: \"🇨🇿\" },\n    { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n    { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n    { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n    { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n    { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n    { code: \"hu\", label: \"Hungary\", flag: \"🇭🇺\" },\n    { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n    { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n    { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n    { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n    { code: \"es\", label: \"Spain\", flag: \"🇪🇸\" },\n    { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n    { code: \"sk\", label: \"Slovakia\", flag: \"🇸🇰\" },\n    { code: \"all\", label: \"World\", flag: \"🌍\" },\n  ];\n\n  // Select the correct language options based on the source\n  let source;\n  if (typeof window !== \"undefined\") {\n    source = localStorage.getItem(\"source\");\n  }\n  let newLng;\n  switch (source) {\n    case \"partner1039\":\n      newLng = availableLanguages1039;\n      break;\n    case \"partner1043\":\n      newLng = availableLanguages1043;\n      break;\n    case \"partner1044\":\n      newLng = availableLanguages1044;\n      break;\n    case \"CLD_VIP\":\n      newLng = availableLanguagesCLD_VIP;\n      break;\n    case \"partner1045_b1\":\n      newLng = availableLanguagesCLD_VIP;\n      break;\n    default:\n      newLng = availableLanguages;\n      break;\n  }\n\n  if (error) return <div>Failed to load</div>;\n\n  const changeLanguage = async (lng) => {\n    setIsLoading(true);\n    localStorage.setItem(\"country\", lng);\n    try {\n      mutate(\"selectedLanguage\", lng, false);\n      await i18n.changeLanguage(lng);\n    } catch (error) {\n      console.error(\"Ошибка при смене языка:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <p className=\"ml-4 mr-4\">{t(\"Website language\")}</p>\n        <div className={`language-switcher ml-3 flex flex-col`}>\n          <select\n            className={`desktop-lang ${selectedLanguage}`}\n            value={selectedLanguage}\n            onChange={(e) => {\n              const selected = newLng.find(\n                (lang) => lang.code === e.target.value\n              );\n              if (selected) {\n                changeLanguage(selected.code);\n              } else {\n                changeLanguage(\"en\"); // Default to \"World\" if no match\n              }\n            }}\n          >\n            {newLng.map((language) => (\n              <option\n                key={language.code}\n                value={language.code}\n                style={{ fontSize: \"20px\" }}\n              >\n                {language.flag} {language.label}\n              </option>\n            ))}\n          </select>\n          {isLoading && <Loader />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LanguageSwitcher;\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAMA,MAAM,mBAAmB;;IACvB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG;IACpB,MAAM,EAAE,MAAM,gBAAgB,EAAE,KAAK,EAAE,GAAG,qIACxC,oBACA,IAAM,KAAK,QAAQ;IAErB,MAAM,CAAC,WAAW,aAAa,GAAG,mJAAS;IAE3C,sEAAsE;IACtE,MAAM,qBAAqB;QACzB;YAAE,MAAM;YAAM,OAAO;YAAa,MAAM;QAAO;QAC/C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAe,MAAM;QAAO;QACjD;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAe,MAAM;QAAO;QACjD;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAS,MAAM;QAAO;QAC3C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAS,MAAM;QAAO;QAC3C;YAAE,MAAM;YAAM,OAAO;YAAY,MAAM;QAAO;QAC9C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAe,MAAM;QAAO;QACjD;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAY,MAAM;QAAO;QAC9C;YAAE,MAAM;YAAO,OAAO;YAAS,MAAM;QAAK;KAC3C;IAED,2CAA2C;IAC3C,MAAM,yBAAyB;IAC/B,MAAM,yBAAyB;QAC7B;YAAE,MAAM;YAAO,OAAO;YAAW,MAAM;QAAK;KAC7C;IACD,MAAM,yBAAyB;QAC7B;YAAE,MAAM;YAAM,OAAO;YAAkB,MAAM;QAAO;QACpD;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAS,MAAM;QAAO;QAC3C;YAAE,MAAM;YAAM,OAAO;YAAe,MAAM;QAAO;QACjD;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAO,OAAO;YAAW,MAAM;QAAK;KAC7C;IACD,MAAM,4BAA4B;QAGhC;YAAE,MAAM;YAAM,OAAO;YAAsB,MAAM;QAAO;QACxD;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAW,MAAM;QAAO;QAC7C;YAAE,MAAM;YAAM,OAAO;YAAS,MAAM;QAAO;QAC3C;YAAE,MAAM;YAAM,OAAO;YAAe,MAAM;QAAO;QACjD;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAS,MAAM;QAAO;QAC3C;YAAE,MAAM;YAAM,OAAO;YAAU,MAAM;QAAO;QAC5C;YAAE,MAAM;YAAM,OAAO;YAAY,MAAM;QAAO;QAC9C;YAAE,MAAM;YAAO,OAAO;YAAS,MAAM;QAAK;KAC3C;IAED,0DAA0D;IAC1D,IAAI;IACJ,IAAI,OAAO,WAAW,aAAa;QACjC,SAAS,aAAa,OAAO,CAAC;IAChC;IACA,IAAI;IACJ,OAAQ;QACN,KAAK;YACH,SAAS;YACT;QACF,KAAK;YACH,SAAS;YACT;QACF,KAAK;YACH,SAAS;YACT;QACF,KAAK;YACH,SAAS;YACT;QACF,KAAK;YACH,SAAS;YACT;QACF;YACE,SAAS;YACT;IACJ;IAEA,IAAI,OAAO,qBAAO,iKAAC;kBAAI;;;;;;IAEvB,MAAM,iBAAiB,OAAO;QAC5B,aAAa;QACb,aAAa,OAAO,CAAC,WAAW;QAChC,IAAI;YACF,oIAAO,oBAAoB,KAAK;YAChC,MAAM,KAAK,cAAc,CAAC;QAC5B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,iKAAC;kBACC,cAAA,iKAAC;;8BACC,iKAAC;oBAAE,WAAU;8BAAa,EAAE;;;;;;8BAC5B,iKAAC;oBAAI,WAAW,CAAC,oCAAoC,CAAC;;sCACpD,iKAAC;4BACC,WAAW,CAAC,aAAa,EAAE,iBAAiB,CAAC;4BAC7C,OAAO;4BACP,UAAU,CAAC;gCACT,MAAM,WAAW,OAAO,IAAI,CAC1B,CAAC,OAAS,KAAK,IAAI,KAAK,EAAE,MAAM,CAAC,KAAK;gCAExC,IAAI,UAAU;oCACZ,eAAe,SAAS,IAAI;gCAC9B,OAAO;oCACL,eAAe,OAAO,iCAAiC;gCACzD;4BACF;sCAEC,OAAO,GAAG,CAAC,CAAC,yBACX,iKAAC;oCAEC,OAAO,SAAS,IAAI;oCACpB,OAAO;wCAAE,UAAU;oCAAO;;wCAEzB,SAAS,IAAI;wCAAC;wCAAE,SAAS,KAAK;;mCAJ1B,SAAS,IAAI;;;;;;;;;;wBAQvB,2BAAa;;;;;;;;;;;;;;;;;;;;;;AAKxB;GArJM;;;;;;KAAA;uCAuJS"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/switcher/BrandsSwitcher.jsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"@/components/Loader\";\nimport { useLanguage } from \"./LanguageContext\";\n\nconst BrandsSwitcher = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { language, setLanguage } = useLanguage(); // Используй состояние и функцию из контекста\n\n  const ipData = async () => {\n    try {\n      const response = await fetch(\n        \"https://ipapi.co/json\"\n      );\n      const data = await response.json();\n      if (data.country) {\n        setLanguage(data.country.toLowerCase()); // Используй setLanguage из контекста\n        if (typeof window !== \"undefined\") {\n          localStorage.setItem(\"country_brands\", data.country.toLowerCase());\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка при запросе к API:\", error);\n      setLanguage(\"all\");\n    }\n  };\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"country_brands\");\n    if (!savedLanguage) {\n      ipData();\n    }\n  }, []);\n\n  const changeLanguage = (lng) => {\n    setIsLoading(true);\n    setLanguage(lng);\n    localStorage.setItem(\"country_brands\", lng);\n    setIsLoading(false);\n    window.location.reload();\n  };\n\n  const availableLanguages = [\n    { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n    { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n    { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n    { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n    { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n    { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n    { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n    { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n    { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n    { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n    { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n    { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n    { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n    { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n    { code: \"cz\", label: \"Czech\", flag: \"🇨🇿\" },\n    { code: \"sk\", label: \"Slovakia\", flag: \"🇸🇰\" },\n    { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n    { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n    { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n    { code: \"hu\", label: \"Hungary\", flag: \"🇭🇺\" },\n    { code: \"bg\", label: \"Bulgaria\", flag: \"🇧🇬\" },\n    { code: \"all\", label: \"World\", flag: \"🌍\" }\n  ];\n  const availableLanguages1039 = [\n    { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n    { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n    { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n    { code: \"bg\", label: \"Bulgaria\", flag: \"🇧🇬\" },\n    { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n    { code: \"cz\", label: \"Czech\", flag: \"🇨🇿\" },\n    { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n    { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n    { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n    { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n    { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n    { code: \"hu\", label: \"Hungary\", flag: \"🇭🇺\" },\n    { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n    { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n    { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n    { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n    { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n    { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n    { code: \"pt\", label: \"Portugal\", flag: \"🇵🇹\" },\n    { code: \"sk\", label: \"Slovakia\", flag: \"🇸🇰\" },\n    { code: \"es\", label: \"Spain\", flag: \"🇪🇸\" },\n    { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n    { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n    { code: \"tr\", label: \"Turkey\", flag: \"🇹🇷\" },\n    { code: \"gb\", label: \"United Kingdom\", flag: \"🇬🇧\" },\n    { code: \"all\", label: \"World\", flag: \"🌍\" },\n  ];\n  const availableLanguages1043 = [\n    { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n    { code: \"us\", label: \"United States\", flag: \"🇺🇸\" },\n    { code: \"all\", label: \"World\", flag: \"🌍\" },\n  ];\n  const availableLanguages1044 = [\n    { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n    { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n    { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n    { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n    { code: \"cz\", label: \"The Czech Republic\", flag: \"🇨🇿\" },\n    { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n    { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n    { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n    { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n    { code: \"gb\", label: \"Great Britain\", flag: \"🇬🇧\" },\n    { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n    { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n    { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n    { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n    { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n    { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n    { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n    { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n    { code: \"za\", label: \"South Africa\", flag: \"🇿🇦\" },\n    { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n    { code: \"us\", label: \"USA\", flag: \"🇺🇸\" },\n    { code: \"all\", label: \"World\", flag: \"🌍\" },\n  ];\n  const availableLanguagesCLD_VIP = [\n    { code: \"all\", label: \"All\", flag: \"🌍\" },\n    { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n    { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n    { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n    { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n    { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n    { code: \"cz\", label: \"Czech Republic\", flag: \"🇨🇿\" },\n    { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n    { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n    { code: \"es\", label: \"Spain\", flag: \"🇪🇸\" },\n    { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n    { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n    { code: \"gb\", label: \"United Kingdom\", flag: \"🇬🇧\" },\n    { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n    { code: \"hu\", label: \"Hungary\", flag: \"🇭🇺\" },\n    { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n    { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n    { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n    { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n    { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n    { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n    { code: \"pt\", label: \"Portugal\", flag: \"🇵🇹\" },\n    { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n    { code: \"sk\", label: \"Slovakia\", flag: \"🇸🇰\" },\n  ];\n\n  \n  let item;\n  if (typeof window !== \"undefined\") {\n    item = localStorage.getItem(\"source\");\n  }\n  let newLng;\n  if (item === \"partner1039\") {\n    newLng = availableLanguages1039;\n  } else if (item === \"partner1043\") {\n    newLng = availableLanguages1043;\n  } else if (item === \"partner1044\") {\n    newLng = availableLanguages1044;\n  } else if (item === \"CLD_VIP\") {\n    newLng = availableLanguagesCLD_VIP;\n  } else if (item === \"partner1045_b1\") {\n    newLng = availableLanguagesCLD_VIP;\n  } else {\n    newLng = availableLanguages;\n  }\n\n\n\n  const [lng, setLng] = useState(\"all\");\n\n  const fetchBrands = (language, newLng) => {\n    const matchedLanguage = newLng.find((lng) => lng.code === language);\n    setLng(matchedLanguage ? matchedLanguage.code : \"all\");\n  };\n  useEffect(() => {\n    fetchBrands(language, newLng);\n  }, [language, newLng]);\n  return (\n    <div className={`language-switcher ml-3 flex flex-col`}>\n      <select\n        className={`desktop-lang ${language}`}\n        value={lng}\n        onChange={(e) => {\n          const selected = newLng.find((lang) => lang.code === e.target.value);\n          if (selected) {\n            changeLanguage(selected.code);\n          }\n        }}\n      >\n        {newLng.map((language) => (\n          <option\n            key={language.code}\n            value={language.code}\n            style={{ fontSize: \"20px\" }}\n          >\n            {language.flag} {language.label}\n          </option>\n        ))}\n      </select>\n\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default BrandsSwitcher;\n\n\n// \"use client\";\n// import { useState, useEffect } from \"react\";\n// import Loader from \"@/components/Loader\";\n// import { useLanguage } from \"./LanguageContext\";\n\n// const BrandsSwitcher = () => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { language, setLanguage } = useLanguage(); // Используй состояние и функцию из контекста\n\n//   const ipData = async () => {\n//     try {\n//       const response = await fetch(\n//         \"https://ipapi.co/json/?key=YD0x5VtXrPJkOcFQMjEyQgqjfM6jUcwS4J54b3DI8ztyrFpHzW\"\n//       );\n//       const data = await response.json();\n//       if (data.country) {\n//         setLanguage(data.country.toLowerCase()); // Используй setLanguage из контекста\n//         if (typeof window !== \"undefined\") {\n//           localStorage.setItem(\"country_brands\", data.country.toLowerCase());\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Ошибка при запросе к API:\", error);\n//       setLanguage(\"all\"); \n//     }\n//   };\n//   useEffect(() => {\n//     const savedLanguage = localStorage.getItem(\"country_brands\");\n//     if (!savedLanguage) {\n//       ipData();\n//     }\n//   }, []);\n\n//   const changeLanguage = (lng) => {\n//     setIsLoading(true);\n//     setLanguage(lng);\n//     localStorage.setItem(\"country_brands\", lng);\n//     setIsLoading(false);\n//   };\n\n//   const availableLanguages = [\n//     { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n//     { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n//     { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n//     { code: \"bg\", label: \"Bulgaria\", flag: \"🇧🇬\" },\n//     { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n//     { code: \"cz\", label: \"Czech\", flag: \"🇨🇿\" },\n//     { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n//     { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n//     { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n//     { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n//     { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n//     { code: \"hu\", label: \"Hungary\", flag: \"🇭🇺\" },\n//     { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n//     { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n//     { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n//     { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n//     { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n//     { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n//     { code: \"pt\", label: \"Portugal\", flag: \"🇵🇹\" },\n//     { code: \"sk\", label: \"Slovakia\", flag: \"🇸🇰\" },\n//     { code: \"es\", label: \"Spain\", flag: \"🇪🇸\" },\n//     { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n//     { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n//     { code: \"tr\", label: \"Turkey\", flag: \"🇹🇷\" },\n//     { code: \"gb\", label: \"United Kingdom\", flag: \"🇬🇧\" },\n//     { code: \"all\", label: \"World\", flag: \"🌍\" },\n//   ];\n//   const availableLanguages1039 = [\n//     { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n//     { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n//     { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n//     { code: \"bg\", label: \"Bulgaria\", flag: \"🇧🇬\" },\n//     { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n//     { code: \"cz\", label: \"Czech\", flag: \"🇨🇿\" },\n//     { code: \"dk\", label: \"Denmark\", flag: \"🇩🇰\" },\n//     { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n//     { code: \"fr\", label: \"France\", flag: \"🇫🇷\" },\n//     { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n//     { code: \"gr\", label: \"Greece\", flag: \"🇬🇷\" },\n//     { code: \"hu\", label: \"Hungary\", flag: \"🇭🇺\" },\n//     { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n//     { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n//     { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n//     { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n//     { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n//     { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n//     { code: \"pt\", label: \"Portugal\", flag: \"🇵🇹\" },\n//     { code: \"sk\", label: \"Slovakia\", flag: \"🇸🇰\" },\n//     { code: \"es\", label: \"Spain\", flag: \"🇪🇸\" },\n//     { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n//     { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n//     { code: \"tr\", label: \"Turkey\", flag: \"🇹🇷\" },\n//     { code: \"gb\", label: \"United Kingdom\", flag: \"🇬🇧\" },\n//     { code: \"all\", label: \"World\", flag: \"🌍\" },\n//   ];\n//   const availableLanguages1043 = [\n//     { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n//     { code: \"us\", label: \"United States\", flag: \"🇺🇸\" },\n//   ];\n//   const availableLanguages1044 = [\n//     { code: \"au\", label: \"Australia\", flag: \"🇦🇺\" },\n//     { code: \"at\", label: \"Austria\", flag: \"🇦🇹\" },\n//     { code: \"be\", label: \"Belgium\", flag: \"🇧🇪\" },\n//     { code: \"ca\", label: \"Canada\", flag: \"🇨🇦\" },\n//     { code: \"ch\", label: \"Switzerland\", flag: \"🇨🇭\" },\n//     { code: \"nl\", label: \"Netherlands\", flag: \"🇳🇱\" },\n//     { code: \"de\", label: \"Germany\", flag: \"🇩🇪\" },\n//     { code: \"cz\", label: \"The Czech Republic\", flag: \"🇨🇿\" },\n//     { code: \"fi\", label: \"Finland\", flag: \"🇫🇮\" },\n//     { code: \"gb\", label: \"Great Britain\", flag: \"🇬🇧\" },\n//     { code: \"ie\", label: \"Ireland\", flag: \"🇮🇪\" },\n//     { code: \"it\", label: \"Italy\", flag: \"🇮🇹\" },\n//     { code: \"nz\", label: \"New Zealand\", flag: \"🇳🇿\" },\n//     { code: \"no\", label: \"Norway\", flag: \"🇳🇴\" },\n//     // { code: \"pl\", label: \"Poland\", flag: \"🇵🇱\" },\n//     { code: \"za\", label: \"South Africa\", flag: \"🇿🇦\" },\n//     { code: \"se\", label: \"Sweden\", flag: \"🇸🇪\" },\n//     { code: \"us\", label: \"USA\", flag: \"🇺🇸\" },\n//     { code: \"all\", label: \"World\", flag: \"🌍\" },\n//   ];\n\n\n  \n  \n//   let item;\n//   if (typeof window !== \"undefined\") {\n//     item = localStorage.getItem(\"source\");\n//   }\n//   let newLng;\n//   if (item === \"partner1039\") {\n//     newLng = availableLanguages1039;\n//   } else if (item === \"partner1043\") {\n//     newLng = availableLanguages1043;\n//   } else if (item === \"partner1044\") {\n//     newLng = availableLanguages1044;\n//   } else {\n//     newLng = availableLanguages;\n//   }\n\n//   return (\n//     <div className={`language-switcher ml-3 flex flex-col`}>\n//       <select\n//         className={`desktop-lang ${language}`}\n//         value={language}\n//         onChange={(e) => {\n//           const selected = newLng.find(\n//             (lang) => lang.code === e.target.value\n//           );\n//           if (selected) {\n//             changeLanguage(selected.code);\n//           }\n//         }}\n//       >\n//         {newLng.map((language) => (\n//           <option\n//             key={language.code}\n//             value={language.code}\n//             style={{ fontSize: \"20px\" }}\n//           >\n//             {language.flag} {language.label}\n//           </option>\n//         ))}\n//       </select>\n\n//       {isLoading && <Loader />}\n//     </div>\n//   );\n// };\n\n// export default BrandsSwitcher;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}