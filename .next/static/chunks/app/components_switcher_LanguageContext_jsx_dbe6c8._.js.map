{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/switcher/LanguageContext.jsx"],"sourcesContent":["\"use client\"\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => useContext(LanguageContext);\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('all'); \n  useEffect(() => {\n    // Эта проверка гарантирует, что код внутри useEffect будет выполняться только в браузере\n    if (typeof window !== 'undefined') {\n      const storedLanguage = localStorage.getItem('country_brands');\n      if (storedLanguage) {\n        setLanguage(storedLanguage);\n      }\n    }\n  }, []);\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAGA,MAAM,gCAAkB;AAEjB,MAAM,cAAc;;IAAM,OAAA,qJAAW;AAAe;GAA9C;AAEN,MAAM,mBAAmB;QAAC,EAAE,QAAQ,EAAE;;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,mJAAS;IACzC,oJAAU;QACR,yFAAyF;QACzF,IAAI,OAAO,WAAW,aAAa;YACjC,MAAM,iBAAiB,aAAa,OAAO,CAAC;YAC5C,IAAI,gBAAgB;gBAClB,YAAY;YACd;QACF;IACF,GAAG,EAAE;IAEL,qBACE,iKAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAU;QAAY;kBACtD;;;;;;AAGP;IAjBa;KAAA"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}