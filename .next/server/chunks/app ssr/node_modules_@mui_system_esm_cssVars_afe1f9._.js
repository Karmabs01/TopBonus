module.exports = {

"[project]/node_modules/@mui/system/esm/cssVars/cssVarsParser.js (ecmascript, app ssr)": (({ r: __turbopack_require__, f: __turbopack_require_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, l: __turbopack_load__, j: __turbopack_dynamic__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {

/**
 * This function create an object from keys, value and then assign to target
 *
 * @param {Object} obj : the target object to be assigned
 * @param {string[]} keys
 * @param {string | number} value
 *
 * @example
 * const source = {}
 * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')
 * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }
 *
 * @example
 * const source = { palette: { primary: 'var(--palette-primary)' } }
 * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')
 * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }
 */ __turbopack_esm__({
    "assignNestedKeys": ()=>assignNestedKeys,
    "default": ()=>cssVarsParser,
    "walkObjectDeep": ()=>walkObjectDeep
});
const assignNestedKeys = (obj, keys, value, arrayKeys = [])=>{
    let temp = obj;
    keys.forEach((k, index)=>{
        if (index === keys.length - 1) {
            if (Array.isArray(temp)) {
                temp[Number(k)] = value;
            } else if (temp && typeof temp === 'object') {
                temp[k] = value;
            }
        } else if (temp && typeof temp === 'object') {
            if (!temp[k]) {
                temp[k] = arrayKeys.includes(k) ? [] : {};
            }
            temp = temp[k];
        }
    });
};
const walkObjectDeep = (obj, callback, shouldSkipPaths)=>{
    function recurse(object, parentKeys = [], arrayKeys = []) {
        Object.entries(object).forEach(([key, value])=>{
            if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([
                ...parentKeys,
                key
            ])) {
                if (value !== undefined && value !== null) {
                    if (typeof value === 'object' && Object.keys(value).length > 0) {
                        recurse(value, [
                            ...parentKeys,
                            key
                        ], Array.isArray(value) ? [
                            ...arrayKeys,
                            key
                        ] : arrayKeys);
                    } else {
                        callback([
                            ...parentKeys,
                            key
                        ], value, arrayKeys);
                    }
                }
            }
        });
    }
    recurse(obj);
};
const getCssValue = (keys, value)=>{
    if (typeof value === 'number') {
        if ([
            'lineHeight',
            'fontWeight',
            'opacity',
            'zIndex'
        ].some((prop)=>keys.includes(prop))) {
            // CSS property that are unitless
            return value;
        }
        const lastKey = keys[keys.length - 1];
        if (lastKey.toLowerCase().indexOf('opacity') >= 0) {
            // opacity values are unitless
            return value;
        }
        return `${value}px`;
    }
    return value;
};
function cssVarsParser(theme, options) {
    const { prefix, shouldSkipGeneratingVar } = options || {};
    const css = {};
    const vars = {};
    const varsWithDefaults = {};
    walkObjectDeep(theme, (keys, value, arrayKeys)=>{
        if (typeof value === 'string' || typeof value === 'number') {
            if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {
                // only create css & var if `shouldSkipGeneratingVar` return false
                const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;
                Object.assign(css, {
                    [cssVar]: getCssValue(keys, value)
                });
                assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);
                assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${value})`, arrayKeys);
            }
        }
    }, (keys)=>keys[0] === 'vars' // skip 'vars/*' paths
    );
    return {
        css,
        vars,
        varsWithDefaults
    };
}

})()),
"[project]/node_modules/@mui/system/esm/cssVars/prepareCssVars.js (ecmascript, app ssr)": (({ r: __turbopack_require__, f: __turbopack_require_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, l: __turbopack_load__, j: __turbopack_dynamic__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$toPropertyKey$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$index$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/deepmerge/index.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$cssVarsParser$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/cssVars/cssVarsParser.js (ecmascript, app ssr)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
const _excluded = [
    "colorSchemes",
    "components",
    "defaultColorScheme"
];
;
;
function prepareCssVars(theme, parserConfig) {
    // @ts-ignore - ignore components do not exist
    const { colorSchemes = {}, defaultColorScheme = 'light' } = theme, otherTheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$28$ecmascript$29$__["default"](theme, _excluded);
    const { vars: rootVars, css: rootCss, varsWithDefaults: rootVarsWithDefaults } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$cssVarsParser$2e$js__$28$ecmascript$29$__["default"](otherTheme, parserConfig);
    let themeVars = rootVarsWithDefaults;
    const colorSchemesMap = {};
    const { [defaultColorScheme]: light } = colorSchemes, otherColorSchemes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$28$ecmascript$29$__["default"](colorSchemes, [
        defaultColorScheme
    ].map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$toPropertyKey$2e$js__$28$ecmascript$29$__["default"]));
    Object.entries(otherColorSchemes || {}).forEach(([key, scheme])=>{
        const { vars, css, varsWithDefaults } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$cssVarsParser$2e$js__$28$ecmascript$29$__["default"](scheme, parserConfig);
        themeVars = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$index$2e$js__$28$ecmascript$29$__["default"](themeVars, varsWithDefaults);
        colorSchemesMap[key] = {
            css,
            vars
        };
    });
    if (light) {
        // default color scheme vars should be merged last to set as default
        const { css, vars, varsWithDefaults } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$cssVarsParser$2e$js__$28$ecmascript$29$__["default"](light, parserConfig);
        themeVars = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$index$2e$js__$28$ecmascript$29$__["default"](themeVars, varsWithDefaults);
        colorSchemesMap[defaultColorScheme] = {
            css,
            vars
        };
    }
    const generateCssVars = (colorScheme)=>{
        var _parserConfig$getSele2;
        if (!colorScheme) {
            var _parserConfig$getSele;
            const css = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, rootCss);
            return {
                css,
                vars: rootVars,
                selector: (parserConfig == null || (_parserConfig$getSele = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele.call(parserConfig, colorScheme, css)) || ':root'
            };
        }
        const css = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, colorSchemesMap[colorScheme].css);
        return {
            css,
            vars: colorSchemesMap[colorScheme].vars,
            selector: (parserConfig == null || (_parserConfig$getSele2 = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele2.call(parserConfig, colorScheme, css)) || ':root'
        };
    };
    return {
        vars: themeVars,
        generateCssVars
    };
}
const __TURBOPACK__default__export__ = prepareCssVars;

})()),
"[project]/node_modules/@mui/system/esm/cssVars/createCssVarsTheme.js (ecmascript, app ssr)": (({ r: __turbopack_require__, f: __turbopack_require_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, l: __turbopack_load__, j: __turbopack_dynamic__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$prepareCssVars$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/cssVars/prepareCssVars.js (ecmascript, app ssr)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
const _excluded = [
    "cssVarPrefix",
    "shouldSkipGeneratingVar"
];
;
function createCssVarsTheme(theme) {
    const { cssVarPrefix, shouldSkipGeneratingVar } = theme, otherTheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$28$ecmascript$29$__["default"](theme, _excluded);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, theme, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$prepareCssVars$2e$js__$28$ecmascript$29$__["default"](otherTheme, {
        prefix: cssVarPrefix,
        shouldSkipGeneratingVar
    }));
}
const __TURBOPACK__default__export__ = createCssVarsTheme;

})()),
"[project]/node_modules/@mui/system/esm/cssVars/createGetCssVar.js (ecmascript, app ssr)": (({ r: __turbopack_require__, f: __turbopack_require_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, l: __turbopack_load__, j: __turbopack_dynamic__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {

/**
 * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable
 * and they does not need to remember the prefix (defined once).
 */ __turbopack_esm__({
    "default": ()=>createGetCssVar
});
function createGetCssVar(prefix = '') {
    function appendVar(...vars) {
        if (!vars.length) {
            return '';
        }
        const value = vars[0];
        if (typeof value === 'string' && !value.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/)) {
            return `, var(--${prefix ? `${prefix}-` : ''}${value}${appendVar(...vars.slice(1))})`;
        }
        return `, ${value}`;
    }
    // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.
    const getCssVar = (field, ...fallbacks)=>{
        return `var(--${prefix ? `${prefix}-` : ''}${field}${appendVar(...fallbacks)})`;
    };
    return getCssVar;
}

})()),
"[project]/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js (ecmascript, app ssr)": (({ r: __turbopack_require__, f: __turbopack_require_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, l: __turbopack_load__, j: __turbopack_dynamic__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {

__turbopack_esm__({
    "default": ()=>useCurrentColorScheme,
    "getColorScheme": ()=>getColorScheme,
    "getSystemMode": ()=>getSystemMode
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/InitColorSchemeScript/InitColorSchemeScript.js (ecmascript, app ssr)");
"__TURBOPACK__ecmascript__hoisting__location__";
'use client';
;
;
;
function getSystemMode(mode) {
    if (typeof window !== 'undefined' && mode === 'system') {
        const mql = window.matchMedia('(prefers-color-scheme: dark)');
        if (mql.matches) {
            return 'dark';
        }
        return 'light';
    }
    return undefined;
}
function processState(state, callback) {
    if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {
        return callback('light');
    }
    if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {
        return callback('dark');
    }
    return undefined;
}
function getColorScheme(state) {
    return processState(state, (mode)=>{
        if (mode === 'light') {
            return state.lightColorScheme;
        }
        if (mode === 'dark') {
            return state.darkColorScheme;
        }
        return undefined;
    });
}
function initializeValue(key, defaultValue) {
    if (typeof window === 'undefined') {
        return undefined;
    }
    let value;
    try {
        value = localStorage.getItem(key) || undefined;
        if (!value) {
            // the first time that user enters the site.
            localStorage.setItem(key, defaultValue);
        }
    } catch (e) {
    // Unsupported
    }
    return value || defaultValue;
}
function useCurrentColorScheme(options) {
    const { defaultMode = 'light', defaultLightColorScheme, defaultDarkColorScheme, supportedColorSchemes = [], modeStorageKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__["DEFAULT_MODE_STORAGE_KEY"], colorSchemeStorageKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__["DEFAULT_COLOR_SCHEME_STORAGE_KEY"], storageWindow = typeof window === 'undefined' ? undefined : window } = options;
    const joinedColorSchemes = supportedColorSchemes.join(',');
    const [state, setState] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useState(()=>{
        const initialMode = initializeValue(modeStorageKey, defaultMode);
        const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);
        const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);
        return {
            mode: initialMode,
            systemMode: getSystemMode(initialMode),
            lightColorScheme,
            darkColorScheme
        };
    });
    const colorScheme = getColorScheme(state);
    const setMode = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useCallback((mode)=>{
        setState((currentState)=>{
            if (mode === currentState.mode) {
                // do nothing if mode does not change
                return currentState;
            }
            const newMode = mode != null ? mode : defaultMode;
            try {
                localStorage.setItem(modeStorageKey, newMode);
            } catch (e) {
            // Unsupported
            }
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, currentState, {
                mode: newMode,
                systemMode: getSystemMode(newMode)
            });
        });
    }, [
        modeStorageKey,
        defaultMode
    ]);
    const setColorScheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useCallback((value)=>{
        if (!value) {
            setState((currentState)=>{
                try {
                    localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);
                    localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);
                } catch (e) {
                // Unsupported
                }
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, currentState, {
                    lightColorScheme: defaultLightColorScheme,
                    darkColorScheme: defaultDarkColorScheme
                });
            });
        } else if (typeof value === 'string') {
            if (value && !joinedColorSchemes.includes(value)) {
                console.error(`\`${value}\` does not exist in \`theme.colorSchemes\`.`);
            } else {
                setState((currentState)=>{
                    const newState = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, currentState);
                    processState(currentState, (mode)=>{
                        try {
                            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);
                        } catch (e) {
                        // Unsupported
                        }
                        if (mode === 'light') {
                            newState.lightColorScheme = value;
                        }
                        if (mode === 'dark') {
                            newState.darkColorScheme = value;
                        }
                    });
                    return newState;
                });
            }
        } else {
            setState((currentState)=>{
                const newState = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, currentState);
                const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;
                const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;
                if (newLightColorScheme) {
                    if (!joinedColorSchemes.includes(newLightColorScheme)) {
                        console.error(`\`${newLightColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
                    } else {
                        newState.lightColorScheme = newLightColorScheme;
                        try {
                            localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);
                        } catch (error) {
                        // Unsupported
                        }
                    }
                }
                if (newDarkColorScheme) {
                    if (!joinedColorSchemes.includes(newDarkColorScheme)) {
                        console.error(`\`${newDarkColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
                    } else {
                        newState.darkColorScheme = newDarkColorScheme;
                        try {
                            localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);
                        } catch (error) {
                        // Unsupported
                        }
                    }
                }
                return newState;
            });
        }
    }, [
        joinedColorSchemes,
        colorSchemeStorageKey,
        defaultLightColorScheme,
        defaultDarkColorScheme
    ]);
    const handleMediaQuery = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useCallback((event)=>{
        if (state.mode === 'system') {
            setState((currentState)=>{
                const systemMode = event != null && event.matches ? 'dark' : 'light';
                // Early exit, nothing changed.
                if (currentState.systemMode === systemMode) {
                    return currentState;
                }
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, currentState, {
                    systemMode
                });
            });
        }
    }, [
        state.mode
    ]);
    // Ref hack to avoid adding handleMediaQuery as a dep
    const mediaListener = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useRef(handleMediaQuery);
    mediaListener.current = handleMediaQuery;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useEffect(()=>{
        const handler = (...args)=>mediaListener.current(...args);
        // Always listen to System preference
        const media = window.matchMedia('(prefers-color-scheme: dark)');
        // Intentionally use deprecated listener methods to support iOS & old browsers
        media.addListener(handler);
        handler(media);
        return ()=>{
            media.removeListener(handler);
        };
    }, []);
    // Handle when localStorage has changed
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useEffect(()=>{
        if (storageWindow) {
            const handleStorage = (event)=>{
                const value = event.newValue;
                if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {
                    // If the key is deleted, value will be null then reset color scheme to the default one.
                    if (event.key.endsWith('light')) {
                        setColorScheme({
                            light: value
                        });
                    }
                    if (event.key.endsWith('dark')) {
                        setColorScheme({
                            dark: value
                        });
                    }
                }
                if (event.key === modeStorageKey && (!value || [
                    'light',
                    'dark',
                    'system'
                ].includes(value))) {
                    setMode(value || defaultMode);
                }
            };
            // For syncing color-scheme changes between iframes
            storageWindow.addEventListener('storage', handleStorage);
            return ()=>{
                storageWindow.removeEventListener('storage', handleStorage);
            };
        }
        return undefined;
    }, [
        setColorScheme,
        setMode,
        modeStorageKey,
        colorSchemeStorageKey,
        joinedColorSchemes,
        defaultMode,
        storageWindow
    ]);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, state, {
        colorScheme,
        setMode,
        setColorScheme
    });
}

})()),
"[project]/node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js (ecmascript, app ssr)": (({ r: __turbopack_require__, f: __turbopack_require_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, l: __turbopack_load__, j: __turbopack_dynamic__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {

__turbopack_esm__({
    "DISABLE_CSS_TRANSITION": ()=>DISABLE_CSS_TRANSITION,
    "default": ()=>createCssVarsProvider
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$formatMuiErrorMessage$2f$index$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/formatMuiErrorMessage/index.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/prop-types/index.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$index$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/deepmerge/index.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$styled$2d$engine$2f$index$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/styled-engine/index.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$private$2d$theming$2f$index$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/private-theming/index.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$ThemeProvider$2f$index$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/ThemeProvider/index.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/InitColorSchemeScript/InitColorSchemeScript.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$useCurrentColorScheme$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js (ecmascript, app ssr)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js (ecmascript, app ssr)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
const _excluded = [
    "colorSchemes",
    "components",
    "generateCssVars",
    "cssVarPrefix"
];
;
;
;
;
;
;
;
;
;
;
const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';
function createCssVarsProvider(options) {
    const { themeId, /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */ theme: defaultTheme = {}, attribute: defaultAttribute = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__["DEFAULT_ATTRIBUTE"], modeStorageKey: defaultModeStorageKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__["DEFAULT_MODE_STORAGE_KEY"], colorSchemeStorageKey: defaultColorSchemeStorageKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__["DEFAULT_COLOR_SCHEME_STORAGE_KEY"], defaultMode: designSystemMode = 'light', defaultColorScheme: designSystemColorScheme, disableTransitionOnChange: designSystemTransitionOnChange = false, resolveTheme, excludeVariablesFromRoot } = options;
    if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {
        console.error(`MUI: \`${designSystemColorScheme}\` does not exist in \`theme.colorSchemes\`.`);
    }
    const ColorSchemeContext = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.createContext(undefined);
    if ("TURBOPACK compile-time truthy", 1) {
        ColorSchemeContext.displayName = 'ColorSchemeContext';
    }
    const useColorScheme = ()=>{
        const value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useContext(ColorSchemeContext);
        if (!value) {
            throw new Error(("TURBOPACK compile-time truthy", 1) ? `MUI: \`useColorScheme\` must be called under <CssVarsProvider />` : ("TURBOPACK unreachable", undefined));
        }
        return value;
    };
    function CssVarsProvider(props) {
        const { children, theme: themeProp = defaultTheme, modeStorageKey = defaultModeStorageKey, colorSchemeStorageKey = defaultColorSchemeStorageKey, attribute = defaultAttribute, defaultMode = designSystemMode, defaultColorScheme = designSystemColorScheme, disableTransitionOnChange = designSystemTransitionOnChange, storageWindow = typeof window === 'undefined' ? undefined : window, documentNode = typeof document === 'undefined' ? undefined : document, colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement, colorSchemeSelector = ':root', disableNestedContext = false, disableStyleSheetGeneration = false } = props;
        const hasMounted = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useRef(false);
        const upperTheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$private$2d$theming$2f$index$2e$js__$28$ecmascript$29$__["useTheme"]();
        const ctx = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useContext(ColorSchemeContext);
        const nested = !!ctx && !disableNestedContext;
        const scopedTheme = themeProp[themeId];
        const _ref = scopedTheme || themeProp, { colorSchemes = {}, components = {}, generateCssVars = ()=>({
                vars: {},
                css: {}
            }), cssVarPrefix } = _ref, restThemeProp = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$28$ecmascript$29$__["default"](_ref, _excluded);
        const allColorSchemes = Object.keys(colorSchemes);
        const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;
        const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;
        // 1. Get the data about the `mode`, `colorScheme`, and setter functions.
        const { mode: stateMode, setMode, systemMode, lightColorScheme, darkColorScheme, colorScheme: stateColorScheme, setColorScheme } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$cssVars$2f$useCurrentColorScheme$2e$js__$28$ecmascript$29$__["default"]({
            supportedColorSchemes: allColorSchemes,
            defaultLightColorScheme,
            defaultDarkColorScheme,
            modeStorageKey,
            colorSchemeStorageKey,
            defaultMode,
            storageWindow
        });
        let mode = stateMode;
        let colorScheme = stateColorScheme;
        if (nested) {
            mode = ctx.mode;
            colorScheme = ctx.colorScheme;
        }
        const calculatedMode = (()=>{
            if (mode) {
                return mode;
            }
            // This scope occurs on the server
            if (defaultMode === 'system') {
                return designSystemMode;
            }
            return defaultMode;
        })();
        const calculatedColorScheme = (()=>{
            if (!colorScheme) {
                // This scope occurs on the server
                if (calculatedMode === 'dark') {
                    return defaultDarkColorScheme;
                }
                // use light color scheme, if default mode is 'light' | 'system'
                return defaultLightColorScheme;
            }
            return colorScheme;
        })();
        // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)
        const { css: rootCss, vars: rootVars } = generateCssVars();
        // 3. Start composing the theme object
        const theme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, restThemeProp, {
            components,
            colorSchemes,
            cssVarPrefix,
            vars: rootVars,
            getColorSchemeSelector: (targetColorScheme)=>`[${attribute}="${targetColorScheme}"] &`
        });
        // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)
        //    The default color scheme stylesheet is constructed to have the least CSS specificity.
        //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.
        const defaultColorSchemeStyleSheet = {};
        const otherColorSchemesStyleSheet = {};
        Object.entries(colorSchemes).forEach(([key, scheme])=>{
            const { css, vars } = generateCssVars(key);
            theme.vars = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$index$2e$js__$28$ecmascript$29$__["default"](theme.vars, vars);
            if (key === calculatedColorScheme) {
                // 4.1 Merge the selected color scheme to the theme
                Object.keys(scheme).forEach((schemeKey)=>{
                    if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {
                        // shallow merge the 1st level structure of the theme.
                        theme[schemeKey] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({}, theme[schemeKey], scheme[schemeKey]);
                    } else {
                        theme[schemeKey] = scheme[schemeKey];
                    }
                });
                if (theme.palette) {
                    theme.palette.colorScheme = key;
                }
            }
            const resolvedDefaultColorScheme = (()=>{
                if (typeof defaultColorScheme === 'string') {
                    return defaultColorScheme;
                }
                if (defaultMode === 'dark') {
                    return defaultColorScheme.dark;
                }
                return defaultColorScheme.light;
            })();
            if (key === resolvedDefaultColorScheme) {
                if (excludeVariablesFromRoot) {
                    const excludedVariables = {};
                    excludeVariablesFromRoot(cssVarPrefix).forEach((cssVar)=>{
                        excludedVariables[cssVar] = css[cssVar];
                        delete css[cssVar];
                    });
                    defaultColorSchemeStyleSheet[`[${attribute}="${key}"]`] = excludedVariables;
                }
                defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}="${key}"]`] = css;
            } else {
                otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}="${key}"]`] = css;
            }
        });
        theme.vars = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$index$2e$js__$28$ecmascript$29$__["default"](theme.vars, rootVars);
        // 5. Declaring effects
        // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useEffect(()=>{
            if (colorScheme && colorSchemeNode) {
                // attaches attribute to <html> because the css variables are attached to :root (html)
                colorSchemeNode.setAttribute(attribute, colorScheme);
            }
        }, [
            colorScheme,
            attribute,
            colorSchemeNode
        ]);
        // 5.2 Remove the CSS transition when color scheme changes to create instant experience.
        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useEffect(()=>{
            let timer;
            if (disableTransitionOnChange && hasMounted.current && documentNode) {
                const css = documentNode.createElement('style');
                css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));
                documentNode.head.appendChild(css);
                // Force browser repaint
                (()=>window.getComputedStyle(documentNode.body))();
                timer = setTimeout(()=>{
                    documentNode.head.removeChild(css);
                }, 1);
            }
            return ()=>{
                clearTimeout(timer);
            };
        }, [
            colorScheme,
            disableTransitionOnChange,
            documentNode
        ]);
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useEffect(()=>{
            hasMounted.current = true;
            return ()=>{
                hasMounted.current = false;
            };
        }, []);
        const contextValue = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.useMemo(()=>({
                allColorSchemes,
                colorScheme,
                darkColorScheme,
                lightColorScheme,
                mode,
                setColorScheme,
                setMode,
                systemMode
            }), [
            allColorSchemes,
            colorScheme,
            darkColorScheme,
            lightColorScheme,
            mode,
            setColorScheme,
            setMode,
            systemMode
        ]);
        let shouldGenerateStyleSheet = true;
        if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {
            shouldGenerateStyleSheet = false;
        }
        const element = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__["jsxs"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.Fragment, {
            children: [
                shouldGenerateStyleSheet && /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__["jsxs"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$28$ecmascript$29$__.Fragment, {
                    children: [
                        /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__["jsx"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$styled$2d$engine$2f$index$2e$js__$28$ecmascript$29$__["GlobalStyles"], {
                            styles: {
                                [colorSchemeSelector]: rootCss
                            }
                        }),
                        /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__["jsx"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$styled$2d$engine$2f$index$2e$js__$28$ecmascript$29$__["GlobalStyles"], {
                            styles: defaultColorSchemeStyleSheet
                        }),
                        /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__["jsx"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$styled$2d$engine$2f$index$2e$js__$28$ecmascript$29$__["GlobalStyles"], {
                            styles: otherColorSchemesStyleSheet
                        })
                    ]
                }),
                /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__["jsx"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$ThemeProvider$2f$index$2e$js__$28$ecmascript$29$__["default"], {
                    themeId: scopedTheme ? themeId : undefined,
                    theme: resolveTheme ? resolveTheme(theme) : theme,
                    children: children
                })
            ]
        });
        if (nested) {
            return element;
        }
        return /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$28$ecmascript$29$__["jsx"](ColorSchemeContext.Provider, {
            value: contextValue,
            children: element
        });
    }
    ("TURBOPACK compile-time truthy", 1) ? CssVarsProvider.propTypes = {
        /**
     * The body attribute name to attach colorScheme.
     */ attribute: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].string,
        /**
     * The component tree.
     */ children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].node,
        /**
     * The node used to attach the color-scheme attribute
     */ colorSchemeNode: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].any,
        /**
     * The CSS selector for attaching the generated custom properties
     */ colorSchemeSelector: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].string,
        /**
     * localStorage key used to store `colorScheme`
     */ colorSchemeStorageKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].string,
        /**
     * The initial color scheme used.
     */ defaultColorScheme: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].oneOfType([
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].string,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].object
        ]),
        /**
     * The initial mode used.
     */ defaultMode: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].string,
        /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */ disableNestedContext: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].bool,
        /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */ disableStyleSheetGeneration: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].bool,
        /**
     * Disable CSS transitions when switching between modes or color schemes.
     */ disableTransitionOnChange: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].bool,
        /**
     * The document to attach the attribute to.
     */ documentNode: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].any,
        /**
     * The key in the local storage used to store current color scheme.
     */ modeStorageKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].string,
        /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */ storageWindow: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].any,
        /**
     * The calculated theme object that will be passed through context.
     */ theme: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$28$ecmascript$29$__["default"].object
    } : ("TURBOPACK unreachable", undefined);
    const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;
    const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;
    const getInitColorSchemeScript = (params)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$InitColorSchemeScript$2f$InitColorSchemeScript$2e$js__$28$ecmascript$29$__["default"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$28$ecmascript$29$__["default"]({
            attribute: defaultAttribute,
            colorSchemeStorageKey: defaultColorSchemeStorageKey,
            defaultMode: designSystemMode,
            defaultLightColorScheme,
            defaultDarkColorScheme,
            modeStorageKey: defaultModeStorageKey
        }, params));
    return {
        CssVarsProvider,
        useColorScheme,
        getInitColorSchemeScript
    };
}

})()),

};

//# sourceMappingURL=node_modules_@mui_system_esm_cssVars_afe1f9._.js.map