{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/picocolors/picocolors.js"],"sourcesContent":["let argv = process.argv || [],\n\tenv = process.env\nlet isColorSupported =\n\t!(\"NO_COLOR\" in env || argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in env ||\n\t\targv.includes(\"--color\") ||\n\t\tprocess.platform === \"win32\" ||\n\t\t(require != null && require(\"tty\").isatty(1) && env.TERM !== \"dumb\") ||\n\t\t\"CI\" in env)\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input\n\t\tlet index = string.indexOf(close, open.length)\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet result = \"\"\n\tlet cursor = 0\n\tdo {\n\t\tresult += string.substring(cursor, index) + replace\n\t\tcursor = index + close.length\n\t\tindex = string.indexOf(close, cursor)\n\t} while (~index)\n\treturn result + string.substring(cursor)\n}\n\nlet createColors = (enabled = isColorSupported) => {\n\tlet init = enabled ? formatter : () => String\n\treturn {\n\t\tisColorSupported: enabled,\n\t\treset: init(\"\\x1b[0m\", \"\\x1b[0m\"),\n\t\tbold: init(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\"),\n\t\tdim: init(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\"),\n\t\titalic: init(\"\\x1b[3m\", \"\\x1b[23m\"),\n\t\tunderline: init(\"\\x1b[4m\", \"\\x1b[24m\"),\n\t\tinverse: init(\"\\x1b[7m\", \"\\x1b[27m\"),\n\t\thidden: init(\"\\x1b[8m\", \"\\x1b[28m\"),\n\t\tstrikethrough: init(\"\\x1b[9m\", \"\\x1b[29m\"),\n\t\tblack: init(\"\\x1b[30m\", \"\\x1b[39m\"),\n\t\tred: init(\"\\x1b[31m\", \"\\x1b[39m\"),\n\t\tgreen: init(\"\\x1b[32m\", \"\\x1b[39m\"),\n\t\tyellow: init(\"\\x1b[33m\", \"\\x1b[39m\"),\n\t\tblue: init(\"\\x1b[34m\", \"\\x1b[39m\"),\n\t\tmagenta: init(\"\\x1b[35m\", \"\\x1b[39m\"),\n\t\tcyan: init(\"\\x1b[36m\", \"\\x1b[39m\"),\n\t\twhite: init(\"\\x1b[37m\", \"\\x1b[39m\"),\n\t\tgray: init(\"\\x1b[90m\", \"\\x1b[39m\"),\n\t\tbgBlack: init(\"\\x1b[40m\", \"\\x1b[49m\"),\n\t\tbgRed: init(\"\\x1b[41m\", \"\\x1b[49m\"),\n\t\tbgGreen: init(\"\\x1b[42m\", \"\\x1b[49m\"),\n\t\tbgYellow: init(\"\\x1b[43m\", \"\\x1b[49m\"),\n\t\tbgBlue: init(\"\\x1b[44m\", \"\\x1b[49m\"),\n\t\tbgMagenta: init(\"\\x1b[45m\", \"\\x1b[49m\"),\n\t\tbgCyan: init(\"\\x1b[46m\", \"\\x1b[49m\"),\n\t\tbgWhite: init(\"\\x1b[47m\", \"\\x1b[49m\"),\n\t}\n}\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,IAAI,IAAI,EAAE,EAC5B,MAAM,QAAQ,GAAG;AAClB,IAAI,mBACH,CAAC,CAAC,cAAc,OAAO,KAAK,QAAQ,CAAC,aAAa,KAClD,CAAC,iBAAiB,OACjB,KAAK,QAAQ,CAAC,cACd,QAAQ,QAAQ,KAAK,WACpB,WAAW,QAAQ,+BAAQ,OAAO,MAAM,CAAC,MAAM,IAAI,IAAI,KAAK,UAC7D,QAAQ,GAAG;AAEb,IAAI,YACH,CAAC,MAAM,OAAO,UAAU,IAAI,GAC5B,CAAA;QACC,IAAI,SAAS,KAAK;QAClB,IAAI,QAAQ,OAAO,OAAO,CAAC,OAAO,KAAK,MAAM;QAC7C,OAAO,CAAC,QACL,OAAO,aAAa,QAAQ,OAAO,SAAS,SAAS,QACrD,OAAO,SAAS;IACpB;AAED,IAAI,eAAe,CAAC,QAAQ,OAAO,SAAS;IAC3C,IAAI,SAAS;IACb,IAAI,SAAS;IACb,GAAG;QACF,UAAU,OAAO,SAAS,CAAC,QAAQ,SAAS;QAC5C,SAAS,QAAQ,MAAM,MAAM;QAC7B,QAAQ,OAAO,OAAO,CAAC,OAAO;IAC/B,QAAS,CAAC,MAAM;IAChB,OAAO,SAAS,OAAO,SAAS,CAAC;AAClC;AAEA,IAAI,eAAe,CAAC,UAAU,gBAAgB;IAC7C,IAAI,OAAO,UAAU,YAAY,IAAM;IACvC,OAAO;QACN,kBAAkB;QAClB,OAAO,KAAK,WAAW;QACvB,MAAM,KAAK,WAAW,YAAY;QAClC,KAAK,KAAK,WAAW,YAAY;QACjC,QAAQ,KAAK,WAAW;QACxB,WAAW,KAAK,WAAW;QAC3B,SAAS,KAAK,WAAW;QACzB,QAAQ,KAAK,WAAW;QACxB,eAAe,KAAK,WAAW;QAC/B,OAAO,KAAK,YAAY;QACxB,KAAK,KAAK,YAAY;QACtB,OAAO,KAAK,YAAY;QACxB,QAAQ,KAAK,YAAY;QACzB,MAAM,KAAK,YAAY;QACvB,SAAS,KAAK,YAAY;QAC1B,MAAM,KAAK,YAAY;QACvB,OAAO,KAAK,YAAY;QACxB,MAAM,KAAK,YAAY;QACvB,SAAS,KAAK,YAAY;QAC1B,OAAO,KAAK,YAAY;QACxB,SAAS,KAAK,YAAY;QAC1B,UAAU,KAAK,YAAY;QAC3B,QAAQ,KAAK,YAAY;QACzB,WAAW,KAAK,YAAY;QAC5B,QAAQ,KAAK,YAAY;QACzB,SAAS,KAAK,YAAY;IAC3B;AACD;AAEA,OAAO,OAAO,GAAG;AACjB,OAAO,OAAO,CAAC,YAAY,GAAG"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}